// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Models;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241113101228_Organizations")]
    partial class Organizations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("WebApp.Models.ContactEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(101);

                    b.Property<int?>("OrgnizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex("OrgnizationId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateOnly(2000, 12, 13),
                            Category = 0,
                            Created = new DateTime(2024, 11, 13, 11, 12, 27, 220, DateTimeKind.Local).AddTicks(2125),
                            Email = "asd@asd.asd",
                            FirstName = "Adam",
                            LastName = "Kowal",
                            OrganizationId = 101,
                            PhoneNumber = "123 123 123"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateOnly(1999, 5, 5),
                            Category = 0,
                            Created = new DateTime(2024, 11, 13, 11, 12, 27, 220, DateTimeKind.Local).AddTicks(2170),
                            Email = "afdsfsdf@afdsfsdf.asd",
                            FirstName = "asd",
                            LastName = "Kfdsfds",
                            OrganizationId = 102,
                            PhoneNumber = "555 123 123"
                        });
                });

            modelBuilder.Entity("WebApp.Models.OrganizationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("REGON")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("organization", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 101,
                            NIP = "2837984",
                            Name = "WSEI",
                            REGON = "19273918739"
                        },
                        new
                        {
                            Id = 102,
                            NIP = "276567764",
                            Name = "ASDASD",
                            REGON = "192876876876718739"
                        });
                });

            modelBuilder.Entity("WebApp.Models.ContactEntity", b =>
                {
                    b.HasOne("WebApp.Models.OrganizationEntity", "Orgnization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrgnizationId");

                    b.Navigation("Orgnization");
                });

            modelBuilder.Entity("WebApp.Models.OrganizationEntity", b =>
                {
                    b.OwnsOne("WebApp.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OrganizationEntityId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("OrganizationEntityId");

                            b1.ToTable("organization");

                            b1.WithOwner()
                                .HasForeignKey("OrganizationEntityId");

                            b1.HasData(
                                new
                                {
                                    OrganizationEntityId = 101,
                                    City = "Kraków",
                                    Street = "św. Filipa 17"
                                },
                                new
                                {
                                    OrganizationEntityId = 102,
                                    City = "Łódź",
                                    Street = "Dworcowa 7"
                                });
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp.Models.OrganizationEntity", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
